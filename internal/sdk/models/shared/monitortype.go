// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MonitorType - Enumerate monitor types.
type MonitorType string

const (
	MonitorTypeHTTP        MonitorType = "http"
	MonitorTypePort        MonitorType = "port"
	MonitorTypePing        MonitorType = "ping"
	MonitorTypeKeyword     MonitorType = "keyword"
	MonitorTypeGrpcKeyword MonitorType = "grpc-keyword"
	MonitorTypeDNS         MonitorType = "dns"
	MonitorTypeDocker      MonitorType = "docker"
	MonitorTypePush        MonitorType = "push"
	MonitorTypeSteam       MonitorType = "steam"
	MonitorTypeGamedig     MonitorType = "gamedig"
	MonitorTypeMqtt        MonitorType = "mqtt"
	MonitorTypeSqlserver   MonitorType = "sqlserver"
	MonitorTypePostgres    MonitorType = "postgres"
	MonitorTypeMysql       MonitorType = "mysql"
	MonitorTypeMongodb     MonitorType = "mongodb"
	MonitorTypeRadius      MonitorType = "radius"
	MonitorTypeRedis       MonitorType = "redis"
)

func (e MonitorType) ToPointer() *MonitorType {
	return &e
}
func (e *MonitorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "http":
		fallthrough
	case "port":
		fallthrough
	case "ping":
		fallthrough
	case "keyword":
		fallthrough
	case "grpc-keyword":
		fallthrough
	case "dns":
		fallthrough
	case "docker":
		fallthrough
	case "push":
		fallthrough
	case "steam":
		fallthrough
	case "gamedig":
		fallthrough
	case "mqtt":
		fallthrough
	case "sqlserver":
		fallthrough
	case "postgres":
		fallthrough
	case "mysql":
		fallthrough
	case "mongodb":
		fallthrough
	case "radius":
		fallthrough
	case "redis":
		*e = MonitorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitorType: %v", v)
	}
}
